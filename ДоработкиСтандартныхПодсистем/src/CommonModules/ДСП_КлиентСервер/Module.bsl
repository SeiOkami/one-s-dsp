// @strict-types

#Область ПрограммныйИнтерфейс

// Настройки расширения.
// 
// Параметры:
//  ИзКэша - Булево - Из кэша или напрямую из базы
// 
// Возвращаемое значение: 
//  см. ДСП_КлиентСервер.НовыйНастройкиРасширения
Функция НастройкиРасширения(ИзКэша = Истина) Экспорт
	
//	#Если Сервер Тогда
//		Возврат ДСП_Сервер.НастройкиРасширения(ИзКэша);
//	#Иначе
//		Возврат ДСП_Клиент.НастройкиРасширения(ИзКэша);
//	#КонецЕсли

	Если ИзКэша Тогда
		Возврат ДСП_КлиентСерверПовтИсп.НастройкиРасширения();
	Иначе
		Возврат ДСП_ВызовСервера.НастройкиРасширения();
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОписанияТипов

// Конструктор объекта Настройки расширения.
// 
// Возвращаемое значение:
//  Структура:
// * ОценкаПроизводительности - см. НастройкиПодсистемыОценкаПроизводительности 
Функция НовыйНастройкиРасширения() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ОценкаПроизводительности", НовыйНастройкиПодсистемыОценкаПроизводительности());
	
	Возврат Результат;
	
КонецФункции

// Конструктор объекта Настройки подсистемы "Оценка производительности".
// 
// Возвращаемое значение:
//  Структура:
// * Использовать - Булево - Использовать ли доработки подсистемы 
// * ФиксироватьБыстрыеФормированияОтчетов - Булево - Нужно ли фиксировать "быстрые" формирования отчетов в замерах (БСП не фиксирует)
Функция НовыйНастройкиПодсистемыОценкаПроизводительности() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Использовать", Ложь);
	Результат.Вставить("ФиксироватьБыстрыеФормированияОтчетов", Ложь);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Ключи

Функция КлючНастроекРасширения() Экспорт
	
	Возврат "Настройки";
	
КонецФункции

Функция ИмяРасширения() Экспорт
	
	Возврат "ДоработкиСтандартныхПодсистем";
	
КонецФункции

#КонецОбласти

#Область ОбщегоНазначения

// Заполнить структуру рекурсивно.
// Источник: https://github.com/SeiOkami/CollectionMethodsOneS/issues/43
//  
// Параметры:
//  Приемник - Структура
//  Источник - Структура
//  ИгнорироватьНеопределено - Булево - Игнорировать ли значение Неопределено из Источника
//  Дополнять - Булево - Нужно ли дополнять несуществующими в приемнике свойствами
//    
Процедура ЗаполнитьСтруктуруРекурсивно(Знач Приемник, Знач Источник, 
	Знач ИгнорироватьНеопределено = Ложь, Знач Дополнять = Ложь) Экспорт
	
	ТипСтруктура = Тип("Структура");
	Если ТипЗнч(Приемник) <> ТипСтруктура
		ИЛИ ТипЗнч(Источник) <> ТипСтруктура Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из Источник Цикл
		
		ТекущийКлюч = КлючИЗначение.Ключ;
		ЗначениеИсточника = КлючИЗначение.Значение; // Структура, Произвольный
		ЗначениеПриемника = Неопределено; 
		Если Приемник.Свойство(ТекущийКлюч, ЗначениеПриемника) Тогда
			Если ТипЗнч(ЗначениеПриемника) = Тип("Структура") Тогда
				ЗаполнитьСтруктуруРекурсивно(ЗначениеПриемника, ЗначениеИсточника, ИгнорироватьНеопределено);
			ИначеЕсли ЗначениеИсточника = Неопределено И ИгнорироватьНеопределено Тогда
				Продолжить;
			Иначе
				Приемник[ТекущийКлюч] = ЗначениеИсточника;
			КонецЕсли;
		ИначеЕсли Дополнять Тогда
			Приемник.Вставить(ТекущийКлюч, ЗначениеИсточника);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти