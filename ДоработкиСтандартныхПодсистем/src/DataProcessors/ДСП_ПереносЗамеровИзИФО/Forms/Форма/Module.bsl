// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СейОбъект = РеквизитФормыВЗначение("Объект");
	Заголовок = СейОбъект.ЗаголовокИнструмента();
	
	ИмяРегистраИФО = "ИТМ_ИсторияФормированияОтчетов";
	Если Метаданные.РегистрыСведений.Найти(ИмяРегистраИФО) = Неопределено Тогда
		СообщениеОтказаОткрытия = "В базе не внедрена подсистема Истории формирования отчетов!";
	КонецЕсли;
	
	ЗаполнитьУсловноеОформление();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(СообщениеОтказаОткрытия) Тогда
		Отказ = Истина;
		ПоказатьПричинуОтказаАсинх();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКлючевыеОперации

&НаКлиенте
Процедура КлючевыеОперацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	//@skip-check invocation-parameter-type-intersect - Баг ЕДТ
	СтрокаТаблицы = Объект.КлючевыеОперации.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ИмяКолонки = СтрЗаменить(Поле.Имя, "КлючевыеОперации", "");
	ЗначениеКолонки = Неопределено;
	Если СтрокаТаблицы.Свойство(ИмяКолонки, ЗначениеКолонки) Тогда
		СтандартнаяОбработка = Ложь;
		Если Поле = Элементы.КлючевыеОперацииПометка Тогда
			СтрокаТаблицы.Пометка = НЕ СтрокаТаблицы.Пометка;
		ИначеЕсли ЗначениеЗаполнено(ЗначениеКолонки) Тогда
			ПоказатьЗначение(,ЗначениеКолонки);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Команда_ВыполнитьДействие(Команда)
	
	Если ЗначениеЗаполнено(Объект.КлючевыеОперации) Тогда
		
		ВыполнитьДействие();
		ЗаполнитьДанные();
		
	Иначе
		
		ПоказатьПредупреждение(, "Необходимо сначала заполнить данные!");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Команда_ЗаполнитьДанные(Команда)
	
	ЗаполнитьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура Команда_УстановитьФлажки(Команда)
	
	ИзменитьФлажки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Команда_СнятьФлажки(Команда)
	
	ИзменитьФлажки(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Асинх Процедура ПоказатьПричинуОтказаАсинх()
	
	Ждать 1;
	Ждать ПредупреждениеАсинх(СообщениеОтказаОткрытия);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьДействие()
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВыполнение;
	
	СейОбъект = РеквизитФормыВЗначение("Объект");
	СейОбъект.ВыполнитьДействияОбработки();
	ЗначениеВРеквизитФормы(СейОбъект, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанные()
	
	СейОбъект = РеквизитФормыВЗначение("Объект");
	СейОбъект.ЗаполнитьКлючевыеОперации();
	ЗначениеВРеквизитФормы(СейОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьФлажки(НовоеЗначение)
	
	Для Каждого Строка Из Объект.КлючевыеОперации Цикл
		Строка.Пометка = НовоеЗначение;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУсловноеОформление()
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	ЭлементУО.Использование = Истина;
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОсобогоТекста);
	
	ЭлементУО.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных("Сообщения");
	ЭлементУО.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных("СообщенияКомментарийНиз");
	
	ЭлементОтбора = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Сообщения.ЭтоИсключение");
	ЭлементОтбора.ПравоеЗначение = Истина;
	
КонецПроцедуры

#КонецОбласти
